#!/bin/bash

# Sleeps exist to prevent a set of bugs from happening.
# I Use proxychains because without it downloading will be slow.
# If you want to run these set of scripts with an unprivileged user then:
# pacman, yay, echo and mv must be added to sudoers file.
# Also move all the scripts to /usr/bin or /usr/local/bin or any place which is in PATH.
# You can remove proxychains in these scripts if you don't need them.
# REPO_NAME, ARCH_DIR, LOGS_DIR, SOURCE_DIR and BUILD_DIR can be adjusted to your liking.
# If you have installed it via the installer then it probably has done everything for you.

GIT_FILE="$HOME/git.toml"
KEY_FILE="$HOME/keyfile.toml"
DATES_FILE="$HOME/dates.json"
PKG_GIT="$HOME/pkg-git"
FORMATTED_DATE="$HOME/date"
SOURCE_DIR="$HOME/source"
LOGS_DIR="$HOME/logs/update"
BUILD_DIR="/build"
REPO_NAME="archlinuxir"
ARCH_DIR="/$REPO_NAME/x86_64"
UPDATEDATE=$(date +'%Y-%m-%d-%H-%M-%S')
DATE=$(date +"%Y%m%d")
echo "Updating the system."
sudo pacman -Syu --noconfirm >> /dev/null
sleep 1s

# Check for updates using nvchecker.

nvchecker -c $GIT_FILE -k $KEY_FILE
cut -f4 -d '"' $DATES_FILE | rev | cut -c8- | rev > dates
sed -i '/^$/d' dates
END=$(cat $PKG_GIT | wc -l)
START=1

while [ $START -le $END ]
do
  GITDATE=$(head -$START $DATE | tail +$START)
  GITNAME=$(head -$START $PKG_GIT | tail +$START)
    if [[ $GITDATE -ge $DATE ]];
    then
	rm -rf $SOURCE_DIR
        proxychains aurdget $GITNAME
        rm -rf $SOURCE_DIR
        cd $HOME
        echo $GITNAME >> $LOGS_DIR/Updated-git-$UPDATEDATE
    else
        echo "$GITNAME doesn't need to get updated."
    fi
  START=$(($START + 1))
done

# Copy built packages to webserver root and update the database.

cp $BUILD_DIR/*.pkg.tar.* $ARCH_DIR
echo "Updating the Database."
rm $ARCH_DIR/$REPO_NAME*
repo-add -R $ARCH_DIR/$REPO_NAME.db.tar.zst $ARCH_DIR/*.pkg.tar.zst > /dev/null 2>&1
echo "Database updated completed."
rm -rf $BUILD_DIR/*
find $LOGS_DIR -mindepth 1 -mtime +2 -delete
